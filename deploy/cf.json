{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "A CF template to create a lambda functions and SNS topic",
    "Parameters": {     
        "pSnsTopicName": {
            "Type": "String"
        },
        "pLambdaCodeBucket": {
            "Type": "String"
        },
        "pLambdaProducerCodeS3KeyPath": {
            "Type": "String"
        },
        "pLambdaConsumerCodeS3KeyPath": {
            "Type": "String"
        }
    },
    "Resources": {
        "MyDemoSNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "TopicName": {
                    "Ref": "pSnsTopicName"
                }
            }
        },
        "lfnLambdaRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn": [
                "MyDemoSNSTopic"
            ],
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "lambdaCloudWatchPolicy",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "snsPublish",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "SNS:Publish"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pSnsTopicName}"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "lfnEventProducer": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "lfnLambdaRole"
            ],
            "Properties": {
                "Environment": {
                    "Variables": {
                        "SNS_TOPIC_ARN": {
                            "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pSnsTopicName}"
                        }
                    }
                },
                "Architectures": [
                    "x86_64"
                ],
                "Runtime": "go1.x",
                "Handler": "main",
                "Code": {
                    "S3Bucket": {
                        "Ref": "pLambdaCodeBucket"
                    },
                    "S3Key": {
                        "Ref": "pLambdaProducerCodeS3KeyPath"
                    }
                },
                "Description": "This is event producer lambda function",
                "FunctionName": "event-producer-lambda",
                "Role": {
                    "Fn::GetAtt": [
                        "lfnLambdaRole",
                        "Arn"
                    ]
                },
                "Timeout": "120"
            }
        },
        "lfnEventConsumer": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "lfnLambdaRole"
            ],
            "Properties": {
                "Environment": {
                    "Variables": {
                        "SNS_TOPIC_ARN": {
                            "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pSnsTopicName}"
                        }
                    }
                },
                "Architectures": [
                    "x86_64"
                ],
                "Runtime": "go1.x",
                "Handler": "main",
                "Code": {
                    "S3Bucket": {
                        "Ref": "pLambdaCodeBucket"
                    },
                    "S3Key": {
                        "Ref": "pLambdaConsumerCodeS3KeyPath"
                    }
                },
                "Description": "This is event consumer lambda function",
                "FunctionName": "event-consumer-lambda",
                "Role": {
                    "Fn::GetAtt": [
                        "lfnLambdaRole",
                        "Arn"
                    ]
                },
                "Timeout": "120"
            }
        },
        "snsPermInvokeProducer": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
                "lfnEventProducer"
            ],
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "lfnEventProducer",
                        "Arn"
                    ]
                },
                "Principal": "sns.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pSnsTopicName}"
                }
            }
        },
        "snsPermInvokeConsumer": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
                "lfnEventConsumer"
            ],
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "lfnEventConsumer",
                        "Arn"
                    ]
                },
                "Principal": "sns.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pSnsTopicName}"
                }
            }
        },
        "snsSubscriptionProducer": {
            "Type": "AWS::SNS::Subscription",
            "DependsOn": [
                "MyDemoSNSTopic",
                "lfnEventProducer"
            ],
            "Properties": {
                "Endpoint": {
                    "Fn::GetAtt": [
                        "lfnEventProducer",
                        "Arn"
                    ]
                },
                "FilterPolicy": {
                    "name": [
                        "SumCompleted"
                    ]
                },
                "Protocol": "lambda",
                "TopicArn": {
                    "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pSnsTopicName}"
                }
            }
        },
        "snsSubscriptionConsumer": {
            "Type": "AWS::SNS::Subscription",
            "DependsOn": [
                "MyDemoSNSTopic",
                "lfnEventConsumer"
            ],
            "Properties": {
                "Endpoint": {
                    "Fn::GetAtt": [
                        "lfnEventConsumer",
                        "Arn"
                    ]
                },
                "FilterPolicy": {
                    "name": [
                        "SumRequested"
                    ]
                },
                "Protocol": "lambda",
                "TopicArn": {
                    "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pSnsTopicName}"
                }
            }
        }
    }
}